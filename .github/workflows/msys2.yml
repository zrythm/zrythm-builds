name: MSYS2 UCRT64
on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            git
            zip
            unzip
            base-devel
            tree
            guile
            libguile-devel
            mingw-w64-i686-toolchain
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-libsamplerate
            mingw-w64-ucrt-x86_64-fftw
            mingw-w64-ucrt-x86_64-ffmpeg
            mingw-w64-ucrt-x86_64-libyaml
            mingw-w64-ucrt-x86_64-libsndfile
            mingw-w64-ucrt-x86_64-rubberband
            mingw-w64-ucrt-x86_64-dlfcn
            mingw-w64-ucrt-x86_64-SDL2
            mingw-w64-ucrt-x86_64-chromaprint
            mingw-w64-ucrt-x86_64-graphviz
            mingw-w64-ucrt-x86_64-cantarell-fonts
            mingw-w64-ucrt-x86_64-gtksourceview5
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-make
            mingw-w64-ucrt-x86_64-binutils
            mingw-w64-ucrt-x86_64-portaudio
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-python-setuptools
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-python-pip
            mingw-w64-ucrt-x86_64-meson
            mingw-w64-ucrt-x86_64-python3
            mingw-w64-ucrt-x86_64-gtk-doc
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-adwaita-icon-theme
            mingw-w64-ucrt-x86_64-curl-winssl
            mingw-w64-ucrt-x86_64-pcre2
            mingw-w64-ucrt-x86_64-xxhash
            mingw-w64-ucrt-x86_64-vamp-plugin-sdk
            mingw-w64-ucrt-x86_64-json-glib
            mingw-w64-ucrt-x86_64-iconv
            mingw-w64-ucrt-x86_64-graphene
            mingw-w64-ucrt-x86_64-libsass
            mingw-w64-ucrt-x86_64-sassc
      - name: Fetch repos and files
        run: |
          pwd
          git clone https://git.sr.ht/~alextee/zrythm
          git clone https://git.sr.ht/~alextee/zrythm-builds
          git clone https://git.sr.ht/~alextee/zrythm-installer
          git clone https://github.com/KDE/breeze-icons
          git clone https://github.com/mesonbuild/meson
          wget https://www.zrythm.org/downloads/inno-setup-bin.zip
          unzip inno-setup-bin.zip -d ~/
      - name: Install AWSCLI
        run: |
          pip install awscli meson ninja
      - name: Build and deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # unused
          REMOTE_IP: ''
          REMOTE_HOME: ''
        run: |
          MESON_PATH=`pwd`/meson/meson.py NINJA_PATH=/ucrt64/bin/ninja AWS_CLI_PATH=/ucrt64/bin/aws zrythm-builds/scripts/make-pkg.sh windows10-msys windows-msys-prepare
          AWS_CLI_PATH=/ucrt64/bin/aws zrythm-builds/scripts/create-manuals-zip.sh windows10-msys
          MESON_PATH=`pwd`/meson/meson.py NINJA_PATH=/ucrt64/bin/ninja AWS_CLI_PATH=/ucrt64/bin/aws zrythm-builds/scripts/make-pkg.sh windows10-msys
          AWS_CLI_PATH=/ucrt64/bin/aws zrythm-builds/scripts/push-pkg.sh windows10-msys
