name: MacOS
on:
  push:
    branches: [ master, nightlies ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build:
    runs-on: macos-11
    timeout-minutes: 140
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          set -e
          echo "updating brew"
          brew update || true
          echo "installing deps"
          # use || true because it returns 1
          brew install ccache curl gnu-sed fftw meson libsamplerate sdl2 lilv librsvg adwaita-icon-theme gtk+3 guile gtksourceview5 zstd npm rt-audio rtmidi jack qjackctl cmake pcre2 libsass glib-utils || true
          brew install brotli xxhash vamp-plugin-sdk json-glib boost libsoxr gperf libxslt libxmlb itstool yyjson || true
          # below tries to build a bunch of stuff from source, avoid
          # brew install graphviz || true
          echo "linking python"
          brew link --overwrite python
          #npm install -g appdmg
          echo "installing cmake"
          pip3 install --user scikit-build
          pip3 install --user cmake
          echo "installing awscli"
          pip3 install --user awscli
      - name: Fetch repos and files
        run: |
          pwd
          git clone https://gitlab.zrythm.org/zrythm/zrythm
          git clone https://gitlab.zrythm.org/zrythm/zrythm-builds
          git clone --recursive https://gitlab.zrythm.org/zrythm/zrythm-installer
          git clone https://github.com/KDE/breeze-icons
          git clone https://github.com/mesonbuild/meson

      #- name: restore ccache
        #uses: actions/cache@v3
        #with:
          #path: /Users/runner/Library/Caches/ccache
          #key: macos-ccache-${{ github.run_id }}
          #restore-keys: |
            #macos-ccache

      #- name: configure ccache
        #run: |
          #test -d /Users/runner/Library/Preferences/ccache || mkdir /Users/runner/Library/Preferences/ccache
          #echo "max_size = 4.0G" >> /Users/runner/Library/Preferences/ccache/ccache.conf
          #ccache -sv

      # Use the following to inject a tmate session to SSH and debug
      # things
      - name: Setup tmate session
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
          detached: true

      - name: Build and deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          REMOTE_IP: ${{ secrets.REMOTE_IP }}
          REMOTE_HOME: ${{ secrets.REMOTE_HOME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ssh-add - <<< "${SSH_PRIVATE_KEY}"
          zrythm-builds/scripts/make-pkg.sh osx-brew-zip osx-brew-prepare
          zrythm-builds/scripts/make-pkg.sh osx-brew-zip
          zrythm-builds/scripts/push-pkg.sh osx-brew-zip
